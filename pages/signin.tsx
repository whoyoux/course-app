import type { NextPage } from 'next';
import { useState } from 'react';

import { useForm, SubmitHandler } from 'react-hook-form';

import Head from 'next/head';

import { BiShow, BiHide } from 'react-icons/bi';

type Inputs = {
    email: string;
    password: string;
};

const SignIn: NextPage = () => {
    const {
        register,
        handleSubmit,
        formState: { errors }
    } = useForm<Inputs>();

    const onSubmit: SubmitHandler<Inputs> = (data) => console.log(data);

    const [passwordShown, setPasswordShown] = useState<boolean>(false);

    const togglePasswordVisibility = () => {
        setPasswordShown(passwordShown ? false : true);
    };

    return (
        <>
            <Head>
                <title>Sign in - Course App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="mx-auto px-5 md:p-0 md:w-10/12 lg:w-9/12 xl:w-3/4">
                <form
                    className="w-90 mx-auto flex flex-col mt-4 md:mt-10 sm:w-3/4 xl:w-3/5 2xl:w-1/2"
                    onSubmit={handleSubmit(onSubmit)}
                >
                    <h1 className="text-2xl">Sign in</h1>
                    <div className="mt-4 mb-2">
                        <label
                            htmlFor="email"
                            className="block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300"
                        >
                            Your email
                        </label>
                        <input
                            type="email"
                            id="email"
                            placeholder="john@example.com"
                            className="input"
                            {...register('email', { required: true })}
                        />
                        <InputError
                            error={errors.email}
                            defaultText="Email is required"
                        />
                    </div>

                    <div className="my-2">
                        <label
                            htmlFor="pass1"
                            className="block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300"
                        >
                            Your password
                        </label>
                        <div className="relative select-none">
                            <input
                                type={passwordShown ? 'text' : 'password'}
                                id="pass"
                                placeholder="Password"
                                className="input relative"
                                {...register('password', {
                                    required: true
                                })}
                            />
                            <div className="absolute right-0 top-0 w-10 h-10 grid place-items-center cursor-pointer touch-none">
                                {passwordShown ? (
                                    <BiHide
                                        size={25}
                                        onClick={togglePasswordVisibility}
                                    />
                                ) : (
                                    <BiShow
                                        size={25}
                                        onClick={togglePasswordVisibility}
                                    />
                                )}
                            </div>
                        </div>
                        <InputError
                            error={errors.password}
                            defaultText="Password is required"
                        />
                    </div>

                    <input
                        type="submit"
                        className="button mt-5"
                        value="Sign in"
                    />
                </form>
            </main>
        </>
    );
};

const InputError = ({
    error,
    defaultText
}: {
    error: any;
    defaultText: string;
}) => {
    if (error)
        return (
            <span className="text-red-400 text-sm">
                {error.message ? error.message : `${defaultText}`}
            </span>
        );
    return <></>;
};

export default SignIn;
