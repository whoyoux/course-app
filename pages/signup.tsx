import type { NextPage } from 'next';
import { useForm, SubmitHandler } from 'react-hook-form';

import Head from 'next/head';
import Link from 'next/link';

type Inputs = {
    email: string;
    password1: string;
    password2: string;
};

const PASSWORD_ERROR: string =
    'Minimum eight, at least one uppercase letter, one lowercase letter, one number and one special character';
const PASSWORD_REGEX: RegExp =
    /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/i;

const SignUp: NextPage = () => {
    const {
        register,
        handleSubmit,
        formState: { errors }
    } = useForm<Inputs>();

    const onSubmit: SubmitHandler<Inputs> = (data) => console.log(data);

    return (
        <>
            <Head>
                <title>Sign up - Course App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="mx-auto px-5 md:p-0 md:w-10/12 lg:w-9/12 xl:w-3/4">
                <form
                    className="w-90 flex flex-col mt-4 md:mt-10 mx-auto sm:w-3/4 md:w-3/5 xl:w-1/2"
                    onSubmit={handleSubmit(onSubmit)}
                >
                    <h1 className="text-2xl">Create account</h1>
                    <div className="mt-4 mb-2">
                        <label
                            htmlFor="email"
                            className="block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300"
                        >
                            Your email
                        </label>
                        <input
                            type="email"
                            id="email"
                            placeholder="john@example.com"
                            className="input"
                            {...register('email', { required: true })}
                        />
                        <InputError
                            error={errors.email}
                            defaultText="Email is required"
                        />
                    </div>

                    <div className="my-2">
                        <label
                            htmlFor="pass1"
                            className="block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300"
                        >
                            Your password
                        </label>

                        <input
                            type="password"
                            id="pass1"
                            placeholder="Password"
                            className="input"
                            {...register('password1', {
                                required: true,
                                pattern: {
                                    value: PASSWORD_REGEX,
                                    message: PASSWORD_ERROR
                                }
                            })}
                        />
                        <InputError
                            error={errors.password1}
                            defaultText="Password is required"
                        />
                    </div>

                    <div className="my-2">
                        <label
                            htmlFor="pass2"
                            className="block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300"
                        >
                            Your password again
                        </label>
                        <input
                            type="password"
                            id="pass2"
                            placeholder="Password again"
                            className="input"
                            {...register('password2', {
                                required: true,
                                pattern: {
                                    value: PASSWORD_REGEX,
                                    message: PASSWORD_ERROR
                                }
                            })}
                        />
                        <InputError
                            error={errors.password2}
                            defaultText="Password is required"
                        />
                    </div>

                    <span className="text-gray-300 text-xs">
                        By signing up you agree to the{' '}
                        <Link href="/" passHref>
                            <span className="hover:underline cursor-pointer">
                                Terms of Service
                            </span>
                        </Link>{' '}
                        and{' '}
                        <Link href="/" passHref>
                            <span className="hover:underline cursor-pointer">
                                Privacy Policy
                            </span>
                        </Link>
                        .
                    </span>

                    <input
                        type="submit"
                        className="button my-2"
                        value="Create account"
                    />
                </form>
            </main>
        </>
    );
};

const InputError = ({
    error,
    defaultText
}: {
    error: any;
    defaultText: string;
}) => {
    if (error)
        return (
            <span className="text-red-400 text-sm">
                {error.message ? error.message : `${defaultText}`}
            </span>
        );
    return <></>;
};

export default SignUp;
